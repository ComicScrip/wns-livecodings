services:
  stagingDB:
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - stagingDB:/var/lib/postgresql/data
  server-staging:
    depends_on:
      stagingDB:
        condition: service_healthy
    image: scrip/wns-livecodings-server:staging
    ports:
      - 7081:4000
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=${DB_HOST:-stagingDB}
      - SERVER_HOST=${SERVER_HOST:-localhost}
      - SERVER_PORT=${SERVER_PORT:-4000}
      - JWT_PRIVATE_KEY=${JWT_PRIVATE_KEY:-abcdefghijkl}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-https://api.staging.pierre.wns.wilders.dev,https://staging.pierre.wns.wilders.dev}
  client-staging:
    image: scrip/wns-livecodings-client:staging
    ports:
      - 7080:80
volumes:
  stagingDB:


