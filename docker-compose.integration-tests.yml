services:
  testDB:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    tmpfs: /var/lib/postgresql
    ports:
      - 5432:5432

  backend:
    build: ./server
    ports:
      - 4000:4000
    volumes:
      - ./server/src:/app/src
    environment:
      DB_HOST: testDB
    healthcheck:
      test: 'curl --fail --request GET -H ''content-type:application/json'' --url ''http://localhost:4000/graphql?query=%7B__typename%7D'''
      interval: 5s
      timeout: 5s
      retries: 10
    depends_on:
      testDB:
        condition: service_healthy

  testrunner:
    build: 
      dockerfile: integration-tests/Dockerfile
      context: ./
    depends_on:
      backend:
        condition: service_healthy
    environment:
      DB_HOST: testDB
    volumes:
      - ./server/src/entity:/server/src/entity
      - ./integration-tests/src:/app/src
